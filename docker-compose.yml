version: "3"

services:
  backend:
    build: ./backend_puppeteer
    container_name: backend
    # use nodemon rather than node for local dev
    command: 
      - /bin/sh
      - -c
      - |
        npm install
        node index.js
    env_file: ./backend_puppeteer/.env
    volumes:
      - ./backend_puppeteer:/usr/src/app
      - ./backend_puppeteer/node_modules:/usr/src/app/node_modules
    ports:
      - 2025:2025
    links:
      - mysql
    depends_on:
      - mysql

  frontend:
    build: ./frontend_react
    # image: "${WEB_IMAGE}"
    container_name: frontend
    env_file: ./frontend_react/.env
    volumes:
      - ./frontend_react:/usr/src/web
      - ./frontend_react/node_modules:/usr/src/web/node_modules
      - ./frontend_react/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - 2026:80
    depends_on:
      - backend

  mysql:
    image: mysql:5.7
    container_name: mysql
    restart: always
    env_file: ./.env
    environment:
      MYSQL_DATABASE: '${MYSQL_DATABASE}'
      MYSQL_USER: '${MYSQL_USER}'
      MYSQL_PASSWORD: '${MYSQL_PASSWORD}'
      MYSQL_ROOT_PASSWORD: '${MYSQL_ROOT_PASSWORD}'
      MYSQL_ALLOW_EMPTY_PASSWORD: '${MYSQL_ALLOW_EMPTY_PASSWORD}'
      MYSQL_RANDOM_ROOT_PASSWORD: '${MYSQL_RANDOM_ROOT_PASSWORD}'
    ports:
      - '3307:3306'
    volumes:
      - ./data:/var/lib/mysql
      - ./init:/docker-entrypoint-initdb.d

volumes:
  data:
  nodemodules: {}